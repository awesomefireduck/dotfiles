#!/bin/bash

function prompt_symbol {
	input;
	if [[ "$last_status" -ne 0 ]];
	then
		echo -en "┏┥$(last_history_command): ${bold_red}${last_status}${textreset}│\n";
	fi
}

function prompt_chroot() {
	# chroot location
	if [[ -n "$debian_chroot" ]]; then
		append_line "chroot: ${debian_chroot}"
	else
		input
	fi
}

function git_status() {
	input;
	echo -n "\
	$(git_branch_info) \
	$(git_files_status) \
	$(get_git_stash_status)"
}

function wipe_screen() {
	append "\[$(tput ed)\]"
}
function current_directory() {
	append_line "📂 ${bold_green}$(pwd | sed -r -e "s!^${HOME}!~!")"
}

function job_status() {
	# running and stopped jobs
	if [[ "$(jobs | \grep -v 'Done')" != "" ]]; then
		echo -n "$(get_all_jobs)"
	fi
}
function display_hostname() {
	# display host when working remote
	append_line "🤖 ${hostcolor}$(hostname)"
}
function display_username() {
	# username
	append "${textreset}\n┗ 🙂 ${usercolor}${USER}${textreset}"
}

function construct_prompt {
	declare -g newline="${textreset}\n┃ "

	# we start with an empty string
	# we use append for the jobs because
	# the jobs command doesn't work in a pipeline
	printf "" \
	| wipe_screen \
	| prompt_symbol \
	| prompt_chroot \
	| current_directory \
	| git_status \
	| append "$(job_status)" \
	| display_hostname \
	| display_username



	# current time, but this is also in tmux?
	#prompt+=${newline}"🕐 $(date +%H:%M:%S)"


	#echo -ne "$prompt"
}
