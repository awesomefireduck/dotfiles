#!/bin/bash
# ignoredups causes lines matching the previous history entry to not be saved.
# erasedups causes all previous lines matching the current line to be removed from the history list before that line is saved.
# See bash(1) for more options
HISTCONTROL=ignoredups:erasedups

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=20000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

#find platform
case $(uname) in
	"Darwin") platform="OSX" ;;
	"linux") platform="linux" ;;
	"Linux") platform="linux" ;;
	*) echo "unknown platform" >&2; platform="unknown";;
esac

# some default type
session_type=local/shell

# check if running inside tmux
if [ ! -z "$TMUX" ]; then
  session_type=remote/tmux

# check if user is connected over ssh
elif [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  session_type=remote/ssh

else
  case $(ps -o comm= -p $PPID) in
    # check if parent process is SSH
    sshd|*/sshd) session_type=remote/ssh;;
  esac
fi

#colours for neovim
export COLORTERM="gnome-terminal"

#colour for GCC !!
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'


if command -v nvim &>/dev/null; then
	EDITOR=nvim
elif command -v vim &>/dev/null; then
	EDITOR=vim
elif command -v nano &>/dev/null; then
	EDITOR=nano
else
	# give up
	true
fi
export EDITOR
export VISUAL="${EDITOR}"

hostsum="$(hostname | cksum | awk '{print $1}')";
export hostnum="$((hostsum%253))";

usersum="$(echo "$USER" | cksum | awk '{print $1}')";
export usernum="$((usersum%250))";

export RUST_SRC_PATH="$(~/.cargo/bin/rustc --print sysroot)/lib/rustlib/src/rust/src"
